<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="unity" 
             type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
    </configSections>
  <unity>
    <alias alias="SimpleCallHandler" type="Artech.UnityExtensions.SimpleCallHandler, Artech.UnityExtensions" />
    <alias alias="IFoo" type="Artech.UnityExtensions.IFoo, Artech.UnityExtensions" />
    <alias alias="Foo" type="Artech.UnityExtensions.Foo, Artech.UnityExtensions" />
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Microsoft.Practices.Unity.Interception.Configuration" />
    <sectionExtension type="Artech.UnityExtensions.Configuration.AutoInterceptionConfigurationExtension, Artech.UnityExtensions" />
    <container>
      <extension type="AutoInterception"/><!--同下，这里的名字引用有效是因为前面的sectionExtension定义了别名-->
      <extension type="Interception"/><!--配置的扩展是被添加到container中的，与container.addExtension()对应-->
      <register type="IFoo" mapTo="Foo"/>
      <interception>
        <policy name="service">
          <matchingRule name="MemberNameMatchingRule" type="MemberNameMatchingRule">
            <constructor>
              <param name="nameToMatch" value="^[^N]*"/>
            </constructor>
          </matchingRule>
          <callHandler name="SimpleCallHandler"  type="SimpleCallHandler"/>
        </policy>
      </interception>
      <autoInterception>
        <interceptor type="InterfaceInterceptor"/>
      </autoInterception>
    </container>
  </unity>
</configuration>